
import java.awt.FileDialog;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

import edu.stanford.nlp.tagger.maxent.MaxentTagger;
// http://www.galalaly.me/index.php/2011/05/tagging-text-with-stanford-pos-tagger-in-java-applications/

public class Main extends JFrame{
	public static ArrayList<String> conceptArray = new ArrayList<String>();
	public static ArrayList<String> tag = new ArrayList<String>();
	public ArrayList<String> nouns = new ArrayList<String>();
	public ArrayList<String> verbs = new ArrayList<String>();
	public static String filename;
	
	public Main(){  
		initUI(); 

	}
	public static void setFileName(String filenameIN){
		filename = filenameIN;
	}
	
	public static String getFileName(){
		return filename;
	}
	
	public static void setConceptArray(ArrayList<String> conceptIN){
		conceptArray = conceptIN;
	}
	public static ArrayList<String> getConceptArray(){
		
		return conceptArray;
	}
	public static void setTagArray(ArrayList<String> tagIN){
		tag = tagIN;
	}
	public static ArrayList<String> getTagArray(){
		return tag;
	}
	
	public final void initUI(){
		final JPanel panel = new JPanel();
		final JPanel panel2 = new JPanel();
	    final JFrame frame = new JFrame();
	   
	    getContentPane().add(panel);

	    JButton Button = new JButton("Choose File");
	    Button.setBounds(30, 60, 250, 30);
	    Button.addActionListener(new ActionListener() {
	        @SuppressWarnings("deprecation")
			public void actionPerformed(ActionEvent event) {
	        	FileDialog fd = new FileDialog(frame, "Choose a file", FileDialog.LOAD);
				//fd.setDirectory("C:\\");
				fd.setFile("*.txt");
				fd.setVisible(true);
				String filename = fd.getFile();
				if(filename == null){
					System.out.println("Cancelled");
				}
				else { //read file
					System.out.println("You chose "+ filename);
					String directory = fd.getDirectory();
					System.out.println(directory);
					filename = directory+filename;
					setFileName(filename);
					frame.dispose();
					try{
						//conceptArray = 
						ReadFile(filename);
					}
					catch(IOException e){
						System.out.println("NOTHING");
					} 

					//TAG
					try {
						Tag();
					} catch (ClassNotFoundException e) {
						// TODO Auto-generated catch block
						System.out.println("CLASSNOTFOUND");
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					Process();
					
					
				} //end else
	        } // end action
	        
	    }); //end action listener
	    
	    JButton Quit = new JButton("Quit");
	    Quit.setBounds(30, 60, 250, 30);
	    Quit.addActionListener(new ActionListener() {
	           public void actionPerformed(ActionEvent event) {
	               System.exit(0);
	          }
	     });
	    
	    panel.add(Button);
	    panel.add(Quit);
	    setTitle("Browse for file");
	    setSize(300, 200);
	    setLocationRelativeTo(null);
	    setDefaultCloseOperation(EXIT_ON_CLOSE);
	    
	} //end initUI
	
	
	
	public static void ReadFile(String filename) throws IOException { 
		System.out.println("READFILE");
		ArrayList<String> concept = new ArrayList<String>();
		FileReader fr = new FileReader(filename);
		BufferedReader reader = new BufferedReader(fr);
		String fullStatement="";
		String nextLine;
		
		while((nextLine = reader.readLine()) != null){
			fullStatement += nextLine;
		}
		int periods = 0;
		for(char c : fullStatement.toCharArray()){
			if(c == '.'){
				periods++;				
			}
		}
		//System.out.println(periods);
		String delimit = "[.]";
		String[] tempAr = fullStatement.split(delimit);
		
		for(int i = 0; i < tempAr.length ; i++){
			concept.add(tempAr[i].trim());
		}
		setConceptArray(concept);
	}
	
	public final void Tag() throws ClassNotFoundException, IOException{
		
		MaxentTagger tagger = new MaxentTagger("taggers/bidirectional-distsim-wsj-0-18.tagger");
		ArrayList<String> temp = new ArrayList<String>();
		
		for(String str : conceptArray){
			str = tagger.tagString(str);
			temp.add(str);
		}
		setTagArray(temp);
	}
	
	
	public static void Process(){
		ArrayList<String> tagged = getTagArray();
		String[][] toPlant = new String[tagged.size()][3];
		String noun1 = "";
		String verb = "";
		String noun2 = "";
		int x = 0;
		int y = 0;
		int index = 0;
		String temp = "";
		boolean found = true;
		for(String str : tagged){
			//while (str != null){
				
				found = false;
				index = 0;
				while(!found){
					//Find NOUN 		need index1
					
					//FIND NEXT NOUN   	need index2
					
					//find verb between noun1 and nound2
					//str from noun1 to noun2
					
					//if no verb noun1 = noun2
					//loop
				}
				
				FindNoun(str);
				noun1 = str.substring(0, x);
				System.out.println(noun1);
				break;
			//}
		} //end for
	}
	
	public static int FindNounIndex(String strIN){
		
		return 0;
	}
	
	public static String FindNoun(String strIN){
		String str = strIN;
		String temp = "";
		int x = 0;
		int y = 0;
		boolean found = false;
		while(!found){
			y = str.indexOf(" ");
			temp = str.substring(x,y);
			found = true;
		}		
			System.out.println(temp);
		return null;
	}
	
	
	public static void main(String[] args) throws ClassNotFoundException, IOException{
		Main ex = new Main();
	    ex.setVisible(true); 
	           
	}
	
}